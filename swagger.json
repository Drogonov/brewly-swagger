{
  "openapi": "3.0.0",
  "paths": {
    "/auth/local/signUp": {
      "post": {
        "operationId": "AuthController_signupLocal",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns status if successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponseDto"
                }
              }
            }
          },
          "422": {
            "description": "Returns business top layer error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDto"
                }
              }
            }
          }
        },
        "summary": "Sign up with email and password",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/local/verifyOTP": {
      "post": {
        "operationId": "AuthController_verifyOTP",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns access and refresh tokens",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokensResponseDto"
                }
              }
            }
          },
          "422": {
            "description": "Returns business top layer error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDto"
                }
              }
            }
          }
        },
        "summary": "Verify OTP and authenticate user",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/local/resendOTP": {
      "post": {
        "operationId": "AuthController_resendOTP",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns operation status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponseDto"
                }
              }
            }
          },
          "422": {
            "description": "Returns business top layer error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDto"
                }
              }
            }
          }
        },
        "summary": "Resend OTP and update it for user",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/local/signIn": {
      "post": {
        "operationId": "AuthController_signinLocal",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns access and refresh tokens",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokensResponseDto"
                }
              }
            }
          },
          "422": {
            "description": "Returns business top layer error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDto"
                }
              }
            }
          }
        },
        "summary": "Sign in with email and password",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns status if successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponseDto"
                }
              }
            }
          },
          "422": {
            "description": "Returns business top layer error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "refresh-token": []
          }
        ],
        "summary": "Log out from current session",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "operationId": "AuthController_refreshTokens",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns new access and refresh tokens",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokensResponseDto"
                }
              }
            }
          },
          "422": {
            "description": "Returns business top layer error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "refresh-token": []
          }
        ],
        "summary": "Refresh access and refresh tokens",
        "tags": [
          "Auth"
        ]
      }
    },
    "/cupping/create": {
      "post": {
        "operationId": "CuppingController_getOnboarding",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCuppingRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Cupping with following DTO",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessIdResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create Cupping",
        "tags": [
          "Cupping"
        ]
      }
    },
    "/onboarding/page": {
      "post": {
        "operationId": "OnboardingController_getOnboarding",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns a onboarding",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnboardingResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "summary": "Get Onboarding response",
        "tags": [
          "App"
        ]
      }
    },
    "/samples/create/type": {
      "post": {
        "operationId": "SamplesController_createSampleType",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSampleTypeRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns id of the sample type after creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessIdResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create Sample Type",
        "tags": [
          "Samples"
        ]
      }
    },
    "/samples/create/item": {
      "post": {
        "operationId": "SamplesController_createSampleItem",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSampleItemRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns id of the sample item after creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessIdResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create Sample Item",
        "tags": [
          "Samples"
        ]
      }
    },
    "/samples/create": {
      "post": {
        "operationId": "SamplesController_createSample",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSampleRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns DTO of the sample after creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SampleResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create Sample",
        "tags": [
          "Samples"
        ]
      }
    },
    "/samples/create/roasttype": {
      "post": {
        "operationId": "SamplesController_createCustomRoastType",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoastTypeRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns DTO of the roast type after creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoastTypeResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create Custom Roast Type",
        "tags": [
          "Samples"
        ]
      }
    },
    "/samples/get/roasttypes": {
      "get": {
        "operationId": "SamplesController_getAvailiableRoastTypes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns DTO of the roast type after creation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoastTypeResponseDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Create Custom Roast Type",
        "tags": [
          "Samples"
        ]
      }
    },
    "/samples/create/coffeetype": {
      "post": {
        "operationId": "SamplesController_createCustomCoffeeType",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCoffeeTypeRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns DTO of the coffee type after creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoffeeTypeResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create Custom Coffee Type",
        "tags": [
          "Samples"
        ]
      }
    },
    "/samples/get/coffeetypes": {
      "get": {
        "operationId": "SamplesController_getAvailiableCoffeeTypes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns DTO of the coffee type after creation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CoffeeTypeResponseDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Create Custom Coffee Type",
        "tags": [
          "Samples"
        ]
      }
    },
    "/samples/search/type": {
      "get": {
        "operationId": "SamplesController_searchForSampleType",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns DTO of the coffee types from library",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchSampleTypeResponseDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Search for coffee type from library",
        "tags": [
          "Samples"
        ]
      }
    },
    "/samples/search/item": {
      "get": {
        "operationId": "SamplesController_searchForSampleItem",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns DTO of the coffee items from warehouse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchSampleTypeResponseDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Search for coffee items from warehouse",
        "tags": [
          "Samples"
        ]
      }
    },
    "/user/search": {
      "get": {
        "operationId": "UserController_createCustomRoastType",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "query",
            "schema": {
              "example": 666,
              "type": "number"
            }
          },
          {
            "name": "str",
            "required": true,
            "in": "query",
            "schema": {
              "example": "John",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns DTO of the users from company",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchUserResponseDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Search for users",
        "tags": [
          "User"
        ]
      }
    }
  },
  "info": {
    "title": "App API",
    "description": "API documentation for the application",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "access-token": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      },
      "refresh-token": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "AuthRequestDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The users email",
            "example": "test@test.com"
          },
          "password": {
            "type": "string",
            "description": "The users password",
            "example": "qqqqqqqq"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "StatusResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "Successful"
          }
        },
        "required": [
          "status"
        ]
      },
      "ErrorResponseDto": {
        "type": "object",
        "properties": {
          "errorMsg": {
            "type": "string",
            "example": "This email isnt email please check it"
          },
          "errorSubCode": {
            "type": "string",
            "example": "INCORRECT_EMAIL"
          },
          "errorFields": {
            "description": "Array of fields with specified errors",
            "example": [
              {
                "fieldCode": "email",
                "errorMsg": "This email isnt email please check it"
              }
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "errorMsg",
          "errorSubCode",
          "errorFields"
        ]
      },
      "TokensResponseDto": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImVtYWlsIjoiYW50b25AdmxlemtvLmNvbSIsImlhdCI6MTczMjA5MTI4NiwiZXhwIjoxNzMyMDkyMTg2fQ.V5_gB8StUKLlBTiBrMLHNvQiLx_e3gscSF6xUYsmQzc"
          },
          "refresh_token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjUsImVtYWlsIjoidGVzdDEyM0B0ZXN0LmNvbSIsImlhdCI6MTczMTkxNDg0NCwiZXhwIjoxNzMyNTE5NjQ0fQ.sj5t3EUFMDhai_t2xyzdNtKMVjNGTRhjQYNMZtwu0Xk"
          }
        },
        "required": [
          "access_token",
          "refresh_token"
        ]
      },
      "CuppingSettingsRequestDto": {
        "type": "object",
        "properties": {
          "userdId": {
            "type": "number",
            "example": 666
          },
          "companyId": {
            "type": "number",
            "example": 666
          },
          "randomSamplesOrder": {
            "type": "boolean",
            "example": true
          },
          "openSampleNameCupping": {
            "type": "boolean",
            "example": true
          },
          "singleUserCupping": {
            "type": "boolean",
            "example": true
          },
          "inviteAllTeammates": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "userdId",
          "companyId",
          "randomSamplesOrder",
          "openSampleNameCupping",
          "singleUserCupping",
          "inviteAllTeammates"
        ]
      },
      "CreateCuppingRequestDto": {
        "type": "object",
        "properties": {
          "cuppingCreatorId": {
            "type": "number",
            "example": 666
          },
          "companyId": {
            "type": "number",
            "example": 666
          },
          "sampleItemsId": {
            "description": "IDs of sample items from warehouse witch are included to cupping",
            "example": [
              1,
              3,
              777
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "settings": {
            "description": "Cupping Settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/CuppingSettingsRequestDto"
              }
            ]
          },
          "invitedUsersId": {
            "description": "IDs of Users who will be invited to cupping",
            "example": [
              1,
              3,
              777
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cuppingName": {
            "type": "string",
            "example": "Cupping 1"
          }
        },
        "required": [
          "cuppingCreatorId",
          "companyId",
          "sampleItemsId",
          "settings",
          "invitedUsersId",
          "cuppingName"
        ]
      },
      "SuccessIdResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": "666"
          }
        },
        "required": [
          "id"
        ]
      },
      "OnboardingResponseDto": {
        "type": "object",
        "properties": {
          "pages": {
            "description": "Страницы из которых состоит Онбоардинг",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "pages"
        ]
      },
      "CreateSampleTypeRequestDto": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "number",
            "example": 666
          },
          "companyName": {
            "type": "string",
            "example": "Tasty Coffee"
          },
          "sampleName": {
            "type": "string",
            "example": "Irgachiff 4"
          },
          "roastType": {
            "type": "string",
            "example": "Medium"
          },
          "coffeeType": {
            "type": "string",
            "example": "Blend"
          }
        },
        "required": [
          "companyId",
          "companyName",
          "sampleName",
          "roastType",
          "coffeeType"
        ]
      },
      "CreateSampleItemRequestDto": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "number",
            "example": 666
          },
          "roastDate": {
            "format": "date-time",
            "type": "string",
            "example": "20.12.2021"
          },
          "openDate": {
            "format": "date-time",
            "type": "string",
            "example": "26.12.2021"
          },
          "wheight": {
            "type": "number",
            "description": "Wheight in gramms",
            "example": 250
          },
          "barCode": {
            "type": "string",
            "example": "666666"
          }
        },
        "required": [
          "companyId",
          "roastDate",
          "openDate",
          "wheight",
          "barCode"
        ]
      },
      "CreateSampleRequestDto": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "number",
            "example": 666
          },
          "type": {
            "description": "Type describing sample",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateSampleTypeRequestDto"
              }
            ]
          },
          "item": {
            "example": "Properties of current sample",
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateSampleItemRequestDto"
              }
            ]
          }
        },
        "required": [
          "companyId",
          "type",
          "item"
        ]
      },
      "SampleResponseDto": {
        "type": "object",
        "properties": {
          "sampleTypeId": {
            "type": "number",
            "example": "666"
          },
          "compnayName": {
            "type": "string",
            "example": "Tasty Coffee"
          },
          "sampleName": {
            "type": "string",
            "example": "Brazilia Cerrado"
          },
          "roastType": {
            "type": "string",
            "example": "Medium"
          },
          "coffeeType": {
            "type": "string",
            "example": "Blend"
          },
          "sampleItemId": {
            "type": "number",
            "example": "777"
          },
          "roastDate": {
            "type": "string",
            "example": "13.12.2021"
          },
          "openDate": {
            "type": "string",
            "example": "21.12.2021"
          },
          "wheight": {
            "type": "number",
            "description": "Wheight in gramms",
            "example": "250"
          },
          "barCode": {
            "type": "string",
            "example": "666777"
          }
        },
        "required": [
          "sampleTypeId",
          "compnayName",
          "sampleName",
          "roastType",
          "coffeeType",
          "sampleItemId",
          "roastDate",
          "openDate",
          "wheight",
          "barCode"
        ]
      },
      "CreateRoastTypeRequestDto": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "number",
            "example": 666
          },
          "value": {
            "type": "string",
            "example": "Natural"
          }
        },
        "required": [
          "companyId",
          "value"
        ]
      },
      "RoastTypeResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": "666"
          },
          "value": {
            "type": "string",
            "example": "Medium+"
          }
        },
        "required": [
          "id",
          "value"
        ]
      },
      "CreateCoffeeTypeRequestDto": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "number",
            "example": 666
          },
          "value": {
            "type": "string",
            "example": "Medium+"
          }
        },
        "required": [
          "companyId",
          "value"
        ]
      },
      "CoffeeTypeResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": "666"
          },
          "value": {
            "type": "string",
            "example": "Natural"
          }
        },
        "required": [
          "id",
          "value"
        ]
      },
      "SearchSampleTypeResponseDto": {
        "type": "object",
        "properties": {
          "sampleTypeId": {
            "type": "number",
            "example": "666"
          },
          "compnayName": {
            "type": "string",
            "example": "Tasty Coffee"
          },
          "sampleName": {
            "type": "string",
            "example": "Brazilia Cerrado"
          },
          "roastType": {
            "type": "string",
            "example": "Medium"
          },
          "coffeeType": {
            "type": "string",
            "example": "Blend"
          }
        },
        "required": [
          "sampleTypeId",
          "compnayName",
          "sampleName",
          "roastType",
          "coffeeType"
        ]
      },
      "SearchUserResponseDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "example": 666
          },
          "userName": {
            "type": "string",
            "example": "John Wayne"
          },
          "email": {
            "type": "string",
            "example": "test@test.com"
          },
          "isChief": {
            "type": "boolean",
            "example": true
          },
          "isOwner": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "userId",
          "userName",
          "email",
          "isChief",
          "isOwner"
        ]
      }
    }
  }
}